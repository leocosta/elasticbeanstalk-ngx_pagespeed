upstream nodejs {
  server 127.0.0.1:3000;
  keepalive 256;
}

server {
  listen 8081;

  location ~* ^/admin(.*) {
    return 301  https://admin.graodegente.com.br$1;
  }

  location ~* ^/blog(.*) {
    return 301 http://www.bloggraodegente.com.br$1;
  }

  if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
      set $year $1;
      set $month $2;
      set $day $3;
      set $hour $4;
  }

  access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
  access_log  /var/log/nginx/access.log  main;

  location / {
      proxy_pass  http://nodejs;
      proxy_set_header   Connection "";
      proxy_http_version 1.1;
      proxy_set_header        Host            $host;
      proxy_set_header        X-Real-IP       $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  gzip on;
  gzip_comp_level 4;
  gzip_types text/html text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  location /assets {
      gzip_static on;
      expires 15m;
      add_header Pragma public;
      add_header Cache-Control "public";
      alias /var/app/current/dist/assets;
  }

  location /js {
      gzip_static on;
      expires 15m;
      add_header Pragma public;
      add_header Cache-Control "public";
      alias /var/app/current/dist/client;
  }

  # Set Expires Headers - max sets the Expires header to 31 December 2037
  location ~* \.(ico|css|js|gif|jpg|jpeg|png|bmp|pdf|doc|docx|mov|qt|mp3|m4a|mp4|m4v|mpeg|mpg|swf|flv|tiff|ttf|woff|eot|ott|svg|txt|webp)$ {

        expires max;
        access_log off;
        log_not_found off;
        add_header Pragma public;
        add_header Cache-Control "public";

  }

  # Pagespeed Configuration
  # To enable / disable it set pagespeed directive to on / off
  # To purge the Pgespeed cache run touch /var/ngx_pagespeed_cache/cache.flush
  pagespeed on;
  pagespeed FileCachePath /var/ngx_pagespeed_cache;

  # Ensure requests for pagespeed optimized resources go to the pagespeed handler and no extraneous headers get set
  location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
    add_header "" "";
  }
  location ~ "^/pagespeed_static/" { }
  location ~ "^/ngx_pagespeed_beacon$" { }

  # Rewrite Level
  pagespeed RewriteLevel PassThrough;

  # Minimize and optimize HTTP requests
  pagespeed EnableFilters rewrite_css;
  pagespeed EnableFilters rewrite_javascript;
  pagespeed EnableFilters combine_css;
  pagespeed EnableFilters combine_javascript;
  pagespeed EnableFilters inline_css;
  pagespeed CssInlineMaxBytes 4096;
  pagespeed EnableFilters inline_javascript;
  pagespeed JsInlineMaxBytes 4096;

  # Image Optimization and lazy load
  pagespeed EnableFilters rewrite_images;
  pagespeed EnableFilters inline_images;
  pagespeed EnableFilters resize_images;
  pagespeed EnableFilters recompress_images;
  pagespeed EnableFilters convert_jpeg_to_webp;
  pagespeed ImageRecompressionQuality 85;
  pagespeed EnableFilters inline_preview_images;
  pagespeed EnableFilters lazyload_images;

  # Remove comments and minify HTML
  pagespeed EnableFilters remove_comments;
  pagespeed EnableFilters collapse_whitespace;

  # Cloudfront CDN integration
  # pagespeed Domain *.cloudfront.net;

  # Cloudfront CDN integration (rewrite alternative)
  # pagespeed EnableFilters rewrite_domains;
  # pagespeed MapRewriteDomain https://xyzxyz.cloudfront.net https://domain.com;

}
